---
title: "Índice de Preços de Habitação"
format: 
  dashboard:
    nav-buttons: 
      - icon: gitlab
        href: https://gitlab.com/dataopsbasics/analise-iph
logo: img/iph.png
theme: cosmo
---

```{r setup, include = FALSE}

# importar dados de Q1
q1 <- read.csv2("dados/preparados/iph_q1.csv")
# passar a coluna 'periodo' a factor ordenado
q1 <- q1 |> 
  dplyr::mutate(periodo = factor(periodo, levels = q1$periodo))

# Último trimestre analisado
last_trim <- q1$periodo[nrow(q1)] |> as.character()

# variação homologa no ultimo trimestre
last_vh <- q1 |> 
  dplyr::filter(periodo == last_trim) |>
  dplyr::pull(vh_tn)

# variação trimestral no ultimo trimestre
last_vt <- q1 |> 
  dplyr::filter(periodo == last_trim) |>
  dplyr::pull(vt_tn)

# importar dados de Q6
q6 <- read.csv2("dados/preparados/iph_q6.csv")
# passar a coluna 'periodo' a factor ordenado
q6 <- q6 |> 
  dplyr::mutate(periodo = factor(periodo, levels = q1$periodo))

```

## Row

```{r}
#| content: valuebox
#| title: "Último trimestre analisado"

list(
  icon = "calendar-week",
  color = "info",
  value = last_trim
)
```

```{r}
#| content: valuebox
#| title: "Variação trimestral"

list(
  icon = "percent",
  color = "warning",
  value = last_vt
)
```

```{r}
#| content: valuebox
#| title: "Variação homóloga"

list(
  icon = "house-up",
  color = "danger",
  value = last_vh
)
```

## Row

### Column {.tabset width="40%"}

```{r}
#| title: 'Evolução IPH'

# passar os dados a formato longo
q1_longo <- q1 |> 
  dplyr::select(periodo, vh_tn, vh_ex, vh_ns) |> 
  tidyr::pivot_longer(cols = c(vh_tn, vh_ex, vh_ns), 
               names_to = 'tipo_vh',
               values_to = 'valor') |> 
  dplyr::mutate(tipo_vh = factor(tipo_vh,
                                 levels = c('vh_tn', 'vh_ex', 'vh_ns'),
                                 labels = c('Total nacional',
                                            'Existentes',
                                            'Novos'
                                            )
                                 )
                )

# gráfico com a evolução das variações homólogas
ggplot2::ggplot(data = q1_longo, ggplot2::aes(x=periodo, y=valor,
                                              group = tipo_vh,
                                              color = tipo_vh)) +
  ggplot2::geom_line() +
  ggplot2::scale_y_continuous(limits = c(0,16), breaks = 2*1:8) +
  ggplot2::labs(y = '%', colour = '',
                caption = 'Fonte: INE, 2024') +
  ggplot2::ggtitle('Taxas de variação homóloga, 2019 a 2024') + 
  ggplot2::theme_bw() +
  ggplot2::theme(axis.title.x = ggplot2::element_blank(),
                 axis.text.x = ggplot2::element_text(angle = 90, vjust = 0.5, hjust=1),
                 legend.position = 'bottom')



```


```{r}
#| title: 'Dados'

q1 |> 
  dplyr::select(periodo, vh_tn, vh_ex, vh_ns) |> 
  dplyr::rename(Total = vh_tn,
                Existents = vh_ex,
                Novos = vh_ns) |> 
  gt::gt() |> 
  gt::tab_header(
    title = "Variação homóloga do IPH") |> 
  gt::tab_source_note(source_note = 'Fonte: INE, 2024')

```

### Column {width="60%"}

```{r}
#| title: 'Transações'
  
q6_longo <- q6 |> 
  dplyr::filter(ano > 2021) |> 
  dplyr::select(periodo, tn_n, ue_n, rst_n) |> 
  tidyr::pivot_longer(cols = c(tn_n, ue_n, rst_n),
                      names_to = 'tipo_n',
                      values_to = 'valor') |> 
  dplyr::mutate(tipo_n = factor(tipo_n,
                                levels = c('tn_n', 'ue_n', 'rst_n'),
                                labels = c('Território nacional',
                                           'União Europeia',
                                           'Restantes países')),
                valor = round(valor/1000, 1))
  
ggplot2::ggplot(q6_longo, ggplot2::aes(x = periodo, y = valor, fill = tipo_n)) +
  ggplot2::geom_bar(stat="identity", position = ggplot2::position_dodge()) +
  ggplot2::geom_text(ggplot2::aes(label = valor), vjust= -0.3,
                     position = ggplot2::position_dodge(1),
                     size=3.5) +
  ggplot2::ggtitle('Número de transações de alojamentos, por domicílio fiscal do comprador') +
  ggplot2::labs(y = 'milhares',
                fill = '',
                caption = 'Fonte: INE, 2024') +
  ggplot2::theme_bw() +
  ggplot2::theme(axis.title.x = ggplot2::element_blank(),
                 legend.position = 'bottom')

```
